 Oop 5대 원칙(SOLID)
- 단일 책임원칙(SRP, Single Responsibility Principle)
 : 한 클래스의 많은 걸 요구 하지 않는것
 : 모듈이 변경되는 이유가 한가지여야 함
 : 해당 모듈이 여러 대상 또는 엑터를 대해 책임을 가져서는 안되고, 오직 하나의 엑터에 대해서만 책임을 져야 한다.

- 개방패쇄원칙 (OCP, Open-Closed Principle)
 : 자신의 확장에는 열려있어야하며, 주변 변화에는 패쇄 원칙

- 리스코프 치환 원칙 (LSP, Liskov Substitution Principle)
 : 하위클래스의 인스턴스는 상위클래스의 인스턴스역할을 허는데 문제가 없어야 한다.
 : 해당 객체를 사용하는 클라이언트는 상위 타입이 하위 타입으로 변경되어도, 차이점을 인식하지 못한 채 상위 타입의 퍼블릭 인터페이스를 통해 서브 클래스를 사용할 수 있어야 한다

- 인터페이스 분리 원칙 (ISP, Interface segregation principle)
 : 상황의 맞는 인터페이스를 구현해야한다
 : 목적과 관심이 각기 다른 클라이언트가 있다면 인터페이스를 통해 적절하게 분리
 : 클라이언트의 목적과 용도에 적합한 인터페이스 만 제공
 : 모든 클라이언트가 자신의 관심에 맞는 퍼블릭 인터페이스만을 접근하여 불필요한 간섭을 최소화

- 의존 역전 원칙 (DIP, Dependency Inversion Principle)
: 추상클래스 또는 상위 클래스는 구체적인 구현클래스 또는 하위클래스에게 의존적이면 안된다